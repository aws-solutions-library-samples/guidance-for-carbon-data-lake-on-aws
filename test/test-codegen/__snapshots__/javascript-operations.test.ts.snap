// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`javascript graphql operations generator Should create the right operations for @model types 1`] = `
"/* eslint-disable */
// this is an auto generated file. This will be overwritten

export const getActivity = /* GraphQL */ \`
  query GetActivity($id: ID!) {
    getActivity(id: $id) {
      transportOperatorCompanyId
      transportOperatorCompanyName
      id
      createdAt
      updatedAt
    }
  }
\`;
export const listActivities = /* GraphQL */ \`
  query ListActivities(
    $filter: ModelActivityFilterInput
    $limit: Int
    $nextToken: String
  ) {
    listActivities(filter: $filter, limit: $limit, nextToken: $nextToken) {
      items {
        transportOperatorCompanyId
        transportOperatorCompanyName
        id
        createdAt
        updatedAt
      }
      nextToken
    }
  }
\`;
export const createActivity = /* GraphQL */ \`
  mutation CreateActivity(
    $input: CreateActivityInput!
    $condition: ModelActivityConditionInput
  ) {
    createActivity(input: $input, condition: $condition) {
      transportOperatorCompanyId
      transportOperatorCompanyName
      id
      createdAt
      updatedAt
    }
  }
\`;
export const updateActivity = /* GraphQL */ \`
  mutation UpdateActivity(
    $input: UpdateActivityInput!
    $condition: ModelActivityConditionInput
  ) {
    updateActivity(input: $input, condition: $condition) {
      transportOperatorCompanyId
      transportOperatorCompanyName
      id
      createdAt
      updatedAt
    }
  }
\`;
export const deleteActivity = /* GraphQL */ \`
  mutation DeleteActivity(
    $input: DeleteActivityInput!
    $condition: ModelActivityConditionInput
  ) {
    deleteActivity(input: $input, condition: $condition) {
      transportOperatorCompanyId
      transportOperatorCompanyName
      id
      createdAt
      updatedAt
    }
  }
\`;
export const onCreateActivity = /* GraphQL */ \`
  subscription OnCreateActivity($filter: ModelSubscriptionActivityFilterInput) {
    onCreateActivity(filter: $filter) {
      transportOperatorCompanyId
      transportOperatorCompanyName
      id
      createdAt
      updatedAt
    }
  }
\`;
export const onUpdateActivity = /* GraphQL */ \`
  subscription OnUpdateActivity($filter: ModelSubscriptionActivityFilterInput) {
    onUpdateActivity(filter: $filter) {
      transportOperatorCompanyId
      transportOperatorCompanyName
      id
      createdAt
      updatedAt
    }
  }
\`;
export const onDeleteActivity = /* GraphQL */ \`
  subscription OnDeleteActivity($filter: ModelSubscriptionActivityFilterInput) {
    onDeleteActivity(filter: $filter) {
      transportOperatorCompanyId
      transportOperatorCompanyName
      id
      createdAt
      updatedAt
    }
  }
\`;
"
`;

exports[`xlsx template generator Should output the right headers 1`] = `
"/* eslint-disable */
// this is an auto generated file. This will be overwritten

export const getActivity = /* GraphQL */ \`
  query GetActivity($id: ID!) {
    getActivity(id: $id) {
      transportOperatorCompanyId
      transportOperatorCompanyName
      id
      createdAt
      updatedAt
    }
  }
\`;
export const listActivities = /* GraphQL */ \`
  query ListActivities(
    $filter: ModelActivityFilterInput
    $limit: Int
    $nextToken: String
  ) {
    listActivities(filter: $filter, limit: $limit, nextToken: $nextToken) {
      items {
        transportOperatorCompanyId
        transportOperatorCompanyName
        id
        createdAt
        updatedAt
      }
      nextToken
    }
  }
\`;
export const createActivity = /* GraphQL */ \`
  mutation CreateActivity(
    $input: CreateActivityInput!
    $condition: ModelActivityConditionInput
  ) {
    createActivity(input: $input, condition: $condition) {
      transportOperatorCompanyId
      transportOperatorCompanyName
      id
      createdAt
      updatedAt
    }
  }
\`;
export const updateActivity = /* GraphQL */ \`
  mutation UpdateActivity(
    $input: UpdateActivityInput!
    $condition: ModelActivityConditionInput
  ) {
    updateActivity(input: $input, condition: $condition) {
      transportOperatorCompanyId
      transportOperatorCompanyName
      id
      createdAt
      updatedAt
    }
  }
\`;
export const deleteActivity = /* GraphQL */ \`
  mutation DeleteActivity(
    $input: DeleteActivityInput!
    $condition: ModelActivityConditionInput
  ) {
    deleteActivity(input: $input, condition: $condition) {
      transportOperatorCompanyId
      transportOperatorCompanyName
      id
      createdAt
      updatedAt
    }
  }
\`;
export const onCreateActivity = /* GraphQL */ \`
  subscription OnCreateActivity($filter: ModelSubscriptionActivityFilterInput) {
    onCreateActivity(filter: $filter) {
      transportOperatorCompanyId
      transportOperatorCompanyName
      id
      createdAt
      updatedAt
    }
  }
\`;
export const onUpdateActivity = /* GraphQL */ \`
  subscription OnUpdateActivity($filter: ModelSubscriptionActivityFilterInput) {
    onUpdateActivity(filter: $filter) {
      transportOperatorCompanyId
      transportOperatorCompanyName
      id
      createdAt
      updatedAt
    }
  }
\`;
export const onDeleteActivity = /* GraphQL */ \`
  subscription OnDeleteActivity($filter: ModelSubscriptionActivityFilterInput) {
    onDeleteActivity(filter: $filter) {
      transportOperatorCompanyId
      transportOperatorCompanyName
      id
      createdAt
      updatedAt
    }
  }
\`;
"
`;
